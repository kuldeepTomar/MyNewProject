{"version":3,"sources":["components/layout/SignedInLinks.js","store/Actions/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/projectSummary.js","components/projects/projectList.js","components/dashboard/Dashboard.js","components/projects/projectDetails.js","components/auth/SignedIn.js","components/auth/SignedOut.js","components/projects/createProject.js","store/Actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectreducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","href","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","UserFirstName","UserLastName","createAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","NewProject","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignedIn","email","password","handlechange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignedOut","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","fireStore","userId","add","UserId","Date","App","exact","path","component","projectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99343261.chunk.js","sourcesContent":["import React, { Profiler } from 'react'\r\nimport { NavLink} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/Actions/authAction'\r\n\r\nconst SignedInLinks = (props)=>{\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut} href={'/create'}>Log Out </a></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signOut:() => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return(dispatch,getState,{getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type:'LOGIN_ERROR',err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return(dispatch,getState,{getFirebase}) => {\r\n        const firebase  = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type:'SIGNOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return(dispatch,getState,{ getFirebase,getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName:newUser.firstName,\r\n                lastName:newUser.lastName,\r\n                initials:newUser.firstName[0] + newUser.lastName[0]\r\n            }).then(() => {\r\n                dispatch({type:'SIGNUP_SUCCESS'})\r\n            }).catch(err => {\r\n                dispatch({type:'SIGNUP-ERROR',err})\r\n            })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink} from 'react-router-dom'\r\n\r\nconst SignedOutLinks = ()=>{\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signOut'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signIn'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Navbar = (props)=>{\r\n    const { auth,profile } = props\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks /> \r\n    return(\r\n        <nav className=\"nav-wrapper grey derken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">New Plan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return{\r\n        auth:state.firebase.auth,\r\n        profile:state.firebase.profile\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notification = (props)=>{\r\n    const { notifications } = props;\r\n        return(\r\n            <div className=\"section\">\r\n               <div className=\"card z-depth-0\">\r\n                   <div className=\"card-content\">\r\n                       <span className=\"card-title\">Notification</span>\r\n                       <ul className=\"notifications\">\r\n                           {notifications && notifications.map(item => {\r\n                               return (\r\n                                   <li key = {item.id}>\r\n                                       <span className=\"pink-text\">{item.user} </span>\r\n                                       <span>{item.content}</span>\r\n                                       <div className=\"grey-text\">\r\n                                           {moment(item.time.toDate()).fromNow()}\r\n                                       </div>\r\n                                   </li>\r\n                               )\r\n                           })}\r\n                       </ul>\r\n                   </div>\r\n               </div> \r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Notification;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return(\r\n        <div className=\"project-list section\">\r\n            <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>Posted by {project.UserFirstName} {project.UserLastName}</p>\r\n                    <p >{moment(project.createAt.toDate()).calendar()} </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './projectSummary'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst ProjectList = ({projects})=>{\r\n    return(\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project =>{\r\n                return(\r\n                    <Link to={'/projects/'+ project.id} key={project.id}>\r\n                        <ProjectSummary project={project}/>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList","import React ,{ Component } from 'react'\r\nimport Notification from './Notification'\r\nimport ProjectList from '../projects/projectList'\r\nimport { connect} from 'react-redux'\r\nimport { firestoreConnect} from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nclass Dashboard extends Component{\r\n    render(){\r\n        const {projects,auth,notifications} = this.props\r\n        if(!auth.uid) return <Redirect to='/signIn' />\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notification notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        projects:state.firestore.ordered.NewProject,\r\n        auth:state.firebase.auth,\r\n        notifications:state.firestore.ordered.notifications\r\n    }\r\n\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'NewProject',orderBy:['createAt','desc']},\r\n        {collection:'notifications',limit:3,orderBy:['time','desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst projectDetails = (props) => {\r\n    const { project,auth } = props\r\n    if(!auth.uid) return <Redirect to=\"/signIn\" />\r\n    if(project){\r\n        return(\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card white z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\"> {project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted By {project.UserFirstName} {project.UserLastName}</div>\r\n                        <div>23rd jan,6pm</div>\r\n                    </div>   \r\n                </div>  \r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n                <div className=\"conatiner\">\r\n                    <p className=\"center\">Loading Project ...</p>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state,ownProps) =>{\r\n    //console.log(state)\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.NewProject\r\n    const project = projects ? projects[id]:null\r\n    return{\r\n        project:project,\r\n        auth:state.firebase.auth\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'NewProject'}\r\n    ])\r\n)(projectDetails);\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/Actions/authAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n class SignedIn extends Component {\r\n     state={\r\n         email:'',\r\n         password:''\r\n\r\n     }\r\n     handlechange=(e) => {\r\n         this.setState({\r\n             [e.target.id]:e.target.value\r\n         })\r\n\r\n     }\r\n     handleSubmit=(e) => {\r\n         e.preventDefault()\r\n        this.props.signIn(this.state)\r\n\r\n    }\r\n    render() {\r\n        const { authError,auth } = this.props\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input onChange={this.handlechange} type=\"email\" id='email'></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={this.handlechange} type=\"password\" id='password'></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">LogIn</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>:null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError:state.auth.authError,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn:(creds) => dispatch(signIn(creds)) \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignedIn)\r\n\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { connect} from 'react-redux'\r\nimport { signUp} from '../../store/Actions/authAction'\r\n\r\n class SignedOut extends Component {\r\n     state={\r\n         email:'',\r\n         password:'',\r\n         firstName:'',\r\n         lastName:''\r\n\r\n     }\r\n     handlechange=(e) => {\r\n         this.setState({\r\n             [e.target.id]:e.target.value\r\n         })\r\n\r\n     }\r\n     handleSubmit=(e) => {\r\n         e.preventDefault()\r\n        this.props.signUp(this.state)\r\n\r\n    }\r\n    render() {\r\n        const { auth ,authError} = this.props\r\n        if(auth.uid) return <Redirect to='/signIn' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">SignUp</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input onChange={this.handlechange} type=\"email\" id='email'></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={this.handlechange} type=\"password\" id='password'></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input onChange={this.handlechange} type=\"text\" id='firstName'></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input onChange={this.handlechange} type=\"text\" id='lastName'></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">SIGNUP</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth:state.firebase.auth,\r\n        authError:state.auth.authError\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp:(newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignedOut);\r\n\r\n","import React, { Component } from 'react'\r\nimport {createProject} from '../../store/Actions/projectAction'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n class CreateProject extends Component {\r\n     state={\r\n         title:'',\r\n         content:''\r\n\r\n     }\r\n     handlechange=(e) => {\r\n         this.setState({\r\n             [e.target.id]:e.target.value\r\n         })\r\n\r\n     }\r\n     handleSubmit=(e) => {\r\n         e.preventDefault()\r\n        //console.log(this.state)\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/')\r\n\r\n    }\r\n    render() {\r\n        const { auth } = this.props\r\n        if(!auth.uid) return <Redirect to='/signIn' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input onChange={this.handlechange} type=\"text\" id='title'></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea onChange={this.handlechange} type=\"text\" id='content' className=\"materialize-textarea\"></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createProject:(project) =>dispatch(createProject(project))\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\r\n\r\n","export const createProject = (project) =>{\r\n    return (dispatch,getState,{ getFirebase,getFirestore})=>{\r\n        const fireStore = getFirestore();\r\n        const profile = getState().firebase.profile\r\n        const userId=getState().firebase.auth\r\n        fireStore.collection('NewProject').add({\r\n            ...project,\r\n            UserFirstName:profile.firstName,\r\n            UserLastName:profile.lastName,\r\n            UserId:userId,\r\n            createAt: new Date()\r\n        }).then(() =>{\r\n            dispatch({type:\"CREATE_PROJECT\",project})\r\n        }).catch((err) =>{\r\n            dispatch({type:\"CREATE_PROJECT_ERROR\",err})\r\n        })\r\n    }\r\n}","import React,{Component} from 'react';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport projectDetails from './components/projects/projectDetails'\nimport SignedIn from './components/auth/SignedIn';\nimport SignedOut from './components/auth/SignedOut';\nimport CreateProject from './components/projects/createProject'\n\n\n\nclass App extends Component{\n  render(){\n    return(\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard}/>\n            <Route path='/projects/:id' component={projectDetails}/>\n            <Route path='/signIn' component={SignedIn}/>\n            <Route path='/signOut' component={SignedOut}/>\n            <Route path='/create' component={CreateProject}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n\n    )\n  }\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError:null\r\n}\r\nconst authReducer = (state = initState ,action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return{\r\n                ...state,\r\n                authError:'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            return {\r\n                ...state,\r\n                authError:action.err.message\r\n            }    \r\n        default:\r\n            return state\r\n    } \r\n}\r\nexport default authReducer;","const initState = {\r\n    projects:[\r\n        {id:'1',title:\"React and Redux\",content:\"blah blah blah\"},\r\n        {id:'2',title:\"Firebase Project\",content:\"blah blah blah\"},\r\n        {id:'3',title:\"New Nodejs project\",content:\"blah blah blah\"}\r\n    ]\r\n}\r\nconst projectReducer = (state = initState,action) => {\r\n    switch(action.type){\r\n        case \"CREATE_PROJECT\":\r\n            console.log(\"Created action\",action.project);\r\n            return state;\r\n        case \"CREATE_PROJECT_ERROR\":\r\n            console.log(\"create an error project\",action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default projectReducer;","import {combineReducers} from 'redux'\r\nimport authReducer from './authReducer'\r\nimport projectReducer from './projectreducer'\r\nimport { firestoreReducer} from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    firebase:firebaseReducer\r\n})\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAqRB_ct6TFxb6XU_U8bqDfSVdQ_ezutao\",\r\n    authDomain: \"kuldeep-tomar-new-project.firebaseapp.com\",\r\n    databaseURL: \"https://kuldeep-tomar-new-project.firebaseio.com\",\r\n    projectId: \"kuldeep-tomar-new-project\",\r\n    storageBucket: \"kuldeep-tomar-new-project.appspot.com\",\r\n    messagingSenderId: \"462504099746\",\r\n    appId: \"1:462504099746:web:6d26ee011e13f05bb77cfb\",\r\n    measurementId: \"G-DNMMZQ5BHB\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({timestampsInSnapshots:true})\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore,applyMiddleware,compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore,getFirestore} from 'redux-firestore'\nimport { reactReduxFirebase,getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\n\n\nconst store = createStore(rootReducer,\n    compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig,{useFirestoreForProfile:true,userProfile:'users',attachAuthIsReady:true})\n    )\n);\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}